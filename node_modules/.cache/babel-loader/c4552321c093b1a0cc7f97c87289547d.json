{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useTabsContext } from '../TabsUnstyled';\nimport { TabsListActionTypes } from './useTabsList.types';\nimport { useCompoundParent } from '../utils/useCompound';\nimport useList from '../useList';\nimport tabsListReducer from './tabsListReducer';\n/**\n *\n * Demos:\n *\n * - [Unstyled Tabs](https://mui.com/base/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabsList API](https://mui.com/base/react-tabs/hooks-api/#use-tabs-list)\n */\n\nfunction useTabsList(parameters) {\n  var _selectedValues$;\n\n  const {\n    ref: externalRef\n  } = parameters;\n  const {\n    direction = 'ltr',\n    onSelected,\n    orientation = 'horizontal',\n    value,\n    registerTabIdLookup,\n    selectionFollowsFocus\n  } = useTabsContext();\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const tabIdLookup = React.useCallback(tabValue => {\n    var _subitems$get;\n\n    return (_subitems$get = subitems.get(tabValue)) == null ? void 0 : _subitems$get.id;\n  }, [subitems]);\n  registerTabIdLookup(tabIdLookup);\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getTabElement = React.useCallback(tabValue => {\n    var _subitems$get$ref$cur, _subitems$get2;\n\n    if (tabValue == null) {\n      return null;\n    }\n\n    return (_subitems$get$ref$cur = (_subitems$get2 = subitems.get(tabValue)) == null ? void 0 : _subitems$get2.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  const isRtl = direction === 'rtl';\n  let listOrientation;\n\n  if (orientation === 'vertical') {\n    listOrientation = 'vertical';\n  } else {\n    listOrientation = isRtl ? 'horizontal-rtl' : 'horizontal-ltr';\n  }\n\n  const handleChange = React.useCallback((event, newValue) => {\n    var _newValue$;\n\n    onSelected(event, (_newValue$ = newValue[0]) != null ? _newValue$ : null);\n  }, [onSelected]);\n  const controlledProps = React.useMemo(() => {\n    if (value === undefined) {\n      return {};\n    }\n\n    return value != null ? {\n      selectedValues: [value]\n    } : {\n      selectedValues: []\n    };\n  }, [value]);\n  const isItemDisabled = React.useCallback(item => {\n    var _subitems$get$disable, _subitems$get3;\n\n    return (_subitems$get$disable = (_subitems$get3 = subitems.get(item)) == null ? void 0 : _subitems$get3.disabled) != null ? _subitems$get$disable : false;\n  }, [subitems]);\n  const {\n    contextValue: listContextValue,\n    dispatch,\n    getRootProps: getListboxRootProps,\n    state: {\n      highlightedValue,\n      selectedValues\n    }\n  } = useList({\n    controlledProps,\n    disabledItemsFocusable: !selectionFollowsFocus,\n    focusManagement: 'DOM',\n    getItemDomElement: getTabElement,\n    isItemDisabled,\n    items: subitemKeys,\n    listRef: externalRef,\n    onChange: handleChange,\n    orientation: listOrientation,\n    reducerActionContext: React.useMemo(() => ({\n      selectionFollowsFocus: selectionFollowsFocus || false\n    }), [selectionFollowsFocus]),\n    selectionMode: 'single',\n    stateReducer: tabsListReducer\n  });\n  React.useEffect(() => {\n    if (value === undefined) {\n      return;\n    } // when a value changes externally, the highlighted value should be synced to it\n\n\n    if (value != null) {\n      dispatch({\n        type: TabsListActionTypes.valueChange,\n        value\n      });\n    }\n  }, [dispatch, value]);\n\n  const getRootProps = (otherHandlers = {}) => {\n    return _extends({}, otherHandlers, getListboxRootProps(otherHandlers), {\n      'aria-orientation': orientation === 'vertical' ? 'vertical' : undefined,\n      role: 'tablist'\n    });\n  };\n\n  return {\n    dispatch,\n    isRtl,\n    orientation,\n    selectedValue: (_selectedValues$ = selectedValues[0]) != null ? _selectedValues$ : null,\n    highlightedValue,\n    getRootProps,\n    contextValue: _extends({}, compoundComponentContextValue, listContextValue)\n  };\n}\n\nexport default useTabsList;","map":{"version":3,"sources":["/media/vikas/New Volume1/e-com/e-commerce/node_modules/@mui/base/useTabsList/useTabsList.js"],"names":["_extends","React","useTabsContext","TabsListActionTypes","useCompoundParent","useList","tabsListReducer","useTabsList","parameters","_selectedValues$","ref","externalRef","direction","onSelected","orientation","value","registerTabIdLookup","selectionFollowsFocus","subitems","contextValue","compoundComponentContextValue","tabIdLookup","useCallback","tabValue","_subitems$get","get","id","subitemKeys","useMemo","Array","from","keys","getTabElement","_subitems$get$ref$cur","_subitems$get2","current","isRtl","listOrientation","handleChange","event","newValue","_newValue$","controlledProps","undefined","selectedValues","isItemDisabled","item","_subitems$get$disable","_subitems$get3","disabled","listContextValue","dispatch","getRootProps","getListboxRootProps","state","highlightedValue","disabledItemsFocusable","focusManagement","getItemDomElement","items","listRef","onChange","reducerActionContext","selectionMode","stateReducer","useEffect","type","valueChange","otherHandlers","role","selectedValue"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useTabsContext } from '../TabsUnstyled';\nimport { TabsListActionTypes } from './useTabsList.types';\nimport { useCompoundParent } from '../utils/useCompound';\nimport useList from '../useList';\nimport tabsListReducer from './tabsListReducer';\n\n/**\n *\n * Demos:\n *\n * - [Unstyled Tabs](https://mui.com/base/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabsList API](https://mui.com/base/react-tabs/hooks-api/#use-tabs-list)\n */\nfunction useTabsList(parameters) {\n  var _selectedValues$;\n  const {\n    ref: externalRef\n  } = parameters;\n  const {\n    direction = 'ltr',\n    onSelected,\n    orientation = 'horizontal',\n    value,\n    registerTabIdLookup,\n    selectionFollowsFocus\n  } = useTabsContext();\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const tabIdLookup = React.useCallback(tabValue => {\n    var _subitems$get;\n    return (_subitems$get = subitems.get(tabValue)) == null ? void 0 : _subitems$get.id;\n  }, [subitems]);\n  registerTabIdLookup(tabIdLookup);\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getTabElement = React.useCallback(tabValue => {\n    var _subitems$get$ref$cur, _subitems$get2;\n    if (tabValue == null) {\n      return null;\n    }\n    return (_subitems$get$ref$cur = (_subitems$get2 = subitems.get(tabValue)) == null ? void 0 : _subitems$get2.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  const isRtl = direction === 'rtl';\n  let listOrientation;\n  if (orientation === 'vertical') {\n    listOrientation = 'vertical';\n  } else {\n    listOrientation = isRtl ? 'horizontal-rtl' : 'horizontal-ltr';\n  }\n  const handleChange = React.useCallback((event, newValue) => {\n    var _newValue$;\n    onSelected(event, (_newValue$ = newValue[0]) != null ? _newValue$ : null);\n  }, [onSelected]);\n  const controlledProps = React.useMemo(() => {\n    if (value === undefined) {\n      return {};\n    }\n    return value != null ? {\n      selectedValues: [value]\n    } : {\n      selectedValues: []\n    };\n  }, [value]);\n  const isItemDisabled = React.useCallback(item => {\n    var _subitems$get$disable, _subitems$get3;\n    return (_subitems$get$disable = (_subitems$get3 = subitems.get(item)) == null ? void 0 : _subitems$get3.disabled) != null ? _subitems$get$disable : false;\n  }, [subitems]);\n  const {\n    contextValue: listContextValue,\n    dispatch,\n    getRootProps: getListboxRootProps,\n    state: {\n      highlightedValue,\n      selectedValues\n    }\n  } = useList({\n    controlledProps,\n    disabledItemsFocusable: !selectionFollowsFocus,\n    focusManagement: 'DOM',\n    getItemDomElement: getTabElement,\n    isItemDisabled,\n    items: subitemKeys,\n    listRef: externalRef,\n    onChange: handleChange,\n    orientation: listOrientation,\n    reducerActionContext: React.useMemo(() => ({\n      selectionFollowsFocus: selectionFollowsFocus || false\n    }), [selectionFollowsFocus]),\n    selectionMode: 'single',\n    stateReducer: tabsListReducer\n  });\n  React.useEffect(() => {\n    if (value === undefined) {\n      return;\n    }\n\n    // when a value changes externally, the highlighted value should be synced to it\n    if (value != null) {\n      dispatch({\n        type: TabsListActionTypes.valueChange,\n        value\n      });\n    }\n  }, [dispatch, value]);\n  const getRootProps = (otherHandlers = {}) => {\n    return _extends({}, otherHandlers, getListboxRootProps(otherHandlers), {\n      'aria-orientation': orientation === 'vertical' ? 'vertical' : undefined,\n      role: 'tablist'\n    });\n  };\n  return {\n    dispatch,\n    isRtl,\n    orientation,\n    selectedValue: (_selectedValues$ = selectedValues[0]) != null ? _selectedValues$ : null,\n    highlightedValue,\n    getRootProps,\n    contextValue: _extends({}, compoundComponentContextValue, listContextValue)\n  };\n}\nexport default useTabsList;"]},"metadata":{},"sourceType":"module"}